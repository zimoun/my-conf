# -*- mode: org ; coding: utf-8 -*-

* Invoke Info: C-h etc.
  - read a local info file: C-u C-h i
  - switch between plain-info text and Info-view:
     M-x Info-on-current-buffer
  - M-n open new window
  - C-h e opens *Messages*

* artist-mode keys (from HELP	: C-h m)
  - rectangle : C-c C-a r RET move RET
  - line      : C-c C-a l RET move RET
  - circle    : C-c C-a c RET move RET
  - ellipse   : C-c C-a e RET move RET
  - poly-line : C-c C-a p RET move RET move RET ..
  - copy a line and paste it below	: S-C-j

* Pense-bete for bookmarks
  See [[info:emacs#Bookmarks][C-h i g (emacs)Bookmarks]].
  - C-x r m : set a bookmark at the current location (e.g. in a file)
  - C-x r b : jump to a bookmark
  - C-x r l : list your bookmarks
  - M-x bookmark-delete : delete a bookmark by name

* Macro (save and reuse)
  - ie, the sequence is 2 steps
    + C-x ( blabla C-x )
    + M-x name-last-kdb-maco [ou insert-kdb-macro]
  - this macro can be used in a region with the simple sequence
    C-u N M-x nom_macro

* Completion / Abbrev
  - C-M i runs completion-at-point
  - M-/ runs dabbrev-expand
    e.g., bla M-/ expands with words in the file

  - M-x abbrev-mode
    http://ergoemacs.org/emacs/emacs_abbrev_mode_tutorial.html
    - Add word for current buffer
      1. Write it: e.g.,
      2. Add it: M-x add-mode-abbrev then eg
    - Now when typing eg it expands to e.g.,
    - Add several words: freq asked questions
      Then: C-u 3 C-x a g
      Or C-u 5 C-x a l
    - Remove: C-u -1 C-x a g then eg

* Move around balanced expr. {}()[]
  See [[info:emacs#Moving%20by%20Parens][C-h i g (emacs)Moving by Parens]].
  - forward-list     : C-M-n
  - backward-list    : C-M-p
  - backward-up-list : C-M-u
  - forward-sexp     : C-M-f
  - backward-sexp    : C-M-b
  - transpose-sexps  : C-M-t
  - kill-sexp        : C-M-k

* Narrow
  See [[info:emacs#Narrowing][C-h i g (emacs)Narrowing]].
 - C-x n n / C-x n d
 - C-x n w
 - M-x clone-indirect-buffer-other-window

* Mark ring
  See [[info:emacs#Mark%20Ring][C-h i g (emacs)Mark Ring]]
 - C-SPC C-SPC put mark to the mark ring
 - C-u C-SPC go to this mark
 - C-x r SPC <n> register position
 - C-x r j <n> go to this position
   If C-x r j ...waiting... then list the registered positions

* encoding
  - C-x C-m f

* Tab vs Space
  - Add this as one-line header, to turn on TAB style
      -*- tab-width: 8 ; indent-tabs-mode: t -*-
    or whatever value instead of 8.

* elfeed and eww
 - Go to link, then yank by y.
 - M-x eww then C-y and adpate.
Enjoy!

* Dired
  - switch to toogle mode C-x C-q
    (other mode C-x C-q turn on read-only for the buffer)
  - then rename any file
  - save these changes C-c C-c
    or C-c ESC to disgard them
  - list only files ending by 'org' and 'html':
    % m org$ RET % m html$ RET t k.

* Misc
  - M-s h r hi-lock-mode Regexp
  #+begin_src emacs-lisp
  ;; hi-lock-mode: avoid to prompt the color
  (setq hi-lock-auto-select-face t)
  #+end_src
  - M-x ffap open file at point (or URL)
  - C-s then RET and magic when C-x C-x
    i.e., return back to the point where the search starts
    and possibly select the region.
  - Multi-pages with 2 (or more) buffers
    + open the same buffer twice: C-x 3 then C-x b (cycle)
    + M-x follow-mode and scroll (C-v or M-v)
    + the end of one buffer is the start of the other one.
  - Insert page break  C-q C-l
    then navigate with C-x [ and C-x ]
  - Save/restore windows configuration
    + C-x r w LETTER saves window configuration
    + C-x r j LETTER restore it
  - Use imenu to ease the navigation
  - Relative goto line:
    + 40 line forward: M-4 M-0 C-n (or C-u 40 C-n or C-2 C-0 C-n)
    + 5 line backward: C-5 C-p
  - C-u M-q fill paragraph justified.


* Org
  - ORDERED (properties) allow to block task if they are not done in the
    right order
  - C-c C-x ; set timer. Time out is a small screen that pops up
    C-c C-x 0 org-timer-start then insert timestamp with C-c C-x .
    or items: C-c C-x - and stop it C-c C-x _ or pause it C-c C-x ,
    C-u C-c C-x 0 start with an offset
  - #+PROPERTY: Effort_ALL 0:05 0:30 1:00
    Column View: %*Effort(Effort){:}
    Then C-c C-x C-c and in one box, Shift arrow to increase/decrease
    effort
    Press q to quit Column view
  - C-c C-x C-d displays clocking time
    C-c C-x C-r clock report... ouch! read the manual
    [[https://www.youtube.com/watch?v=ldTx_CB5cRc&list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE&index=29][Tuto from Youtube]]
  - Org module ? Allow habits
  - M-x org-occur to efficiently search
    Less convenient than M-x swiper-isearch (bind C-s)

* Show off in Demo
  All can be done with Awesome (Mod-x blah)
  - emacs --daemon
  - emacsclient -c path/to/dir
  - M-x set-background-color
    LightGreen | LightBlue | ...
  - emacsclient -c path/to/file1
  - M-x set-background-color
  - M-x term
    - C-c C-j "normal mode", emacs keys
    - C-c C-k "pure term mode"
  - C-x C-+ to zoom in
  - M-x my/save-buffer-as-pdf
  - emacsclient -e '(kill-emacs)'

  - Highlight line with cursor:  M-x hl-line-mode
  - Track command: M-x command-log-show
    (see command-log-mode)
  - Remove mode-line: M-: (setq mode-line-format nil)



* Basics
 - Repeating command C-x z
   - Split window
   - Do:
     - C-x } enlarge-window-horizontally
     - C-x { shrink-window-horizontally
     - C-x ^ enlarge-window
   - C-x z Repeat the last command
   - z Repeat again, etc.

 - C-x + Make window the same size
 - C-M-v Scroll other window down

 - C-s C-w Search word after point
 - M-x flush-lines
 - M-x map-query-replace-regexp
   #+begin_src text
     gp: Adam
     gp: Bella
     gp: Carol
     gp: Danuta
     gp: Ed
     gp: Fran
   #+end_src
   M-x map-query-replace-regexp ^gp: RET red: blue: green: RET !
   #+begin_src text
     red: Adam
     blue: Bella
     green: Carol
     red: Danuta
     blue: Ed
     green: Fran
   #+end_src
 - M-^ Join the current line with the previous one
 - M-SPACE Delete *ALL* spaces but one between 2 char
 - M-\ Delete *ALL* whitespace between 2 char
 - C-x r C-h List all the C-x r <key>

* Message-mode
 - copy region
 - paste it
 - then M-x message-mark-inserted-region
For example:
--8<---------------cut here---------------start------------->8---
  All can be done with Awesome (Mod-x blah)
  - emacs --daemon
  - emacsclient -c path/to/dir
  - M-x set-background-color
     LightGreen | LightBlue | ...
  - emacsclient -c path/to/file1
--8<---------------cut here---------------end--------------->8---

* Debbugs (gnus)

  - View MINE attachment (go between brakets):
    - c: open in other buffer
    - i: insert in the current buffer
      WARNING: plain/text without charset decoding
    - C: prompt the charset but then view with external program
      This fixes the encoding issue when replying.

* Magit

  - magit-log-buffer-file does git log the-visited-file
  - magit-show-commit updates the buffer magit-revision
    => to compare two commits: lock one buffer with
    magit-toggle-buffer-lock
  - Guix workflow
    1. one patch:
       #+begin_src shell

         git format-patch -o patches -1 <branch>
         git send-email --to=guix-patches@gnu.org patches/0001-<title>

       #+end_src

    2. series of patches
       #+begin_src shell

         git format-patch -N --cover-letter -o patches <branch>

         edit patches/0000-cover-letter.patch
         # send as you want patches/0000-cover-letter.patch to guix-patches@gnu.org
         rm patches/0000-cover-letter.patch
         # wait the bug number
         git send-email --to=nnnnn@debbugs.gnu.org patches/*.patch

       #+end_src

  - Split hunk: select lines and stage

* ELPA error

  (setq gnutls-algorithm-priority "NORMAL:-VERS-TLS1.3")
  https://debbugs.gnu.org/cgi/bugreport.cgi?bug=34341

* Git

git merge-base --fork-point master
git show-branch master feature

git format-patch --cover-letter --base=$(git merge-base --fork-point master)

* Notmuch

  - C-x 3 and then M-x mode-follow
  - Compose: M-x mode-fci
* IRC

#+begin_src text
  /nick zimoun
  /msg nickserv ghost zimoun <passwd>
  /msg NickServ IDENTIFY zimoun <passwd>
#+end_src

***** login
You can login with the following command:
/msg nickserv identify EMAIL PASSWORD

***** Change username
/nick $Username

***** Authenticate to Nickserv
/msg NickServ identify $Password

***** Authenticate to server
You can authenticate to the server with the following:
/msg nickserv identify PASSWORD

***** reclaim username
If it happens that someone else has claimed your registered nickname while you are offline, you can claim your nickname by force, with the following command:
/msg nickserv ghost USERNAME PASSWORD
